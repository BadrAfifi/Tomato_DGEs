sampleInfo <- as.data.frame(bind_cols(samplnames,con_stage)) # meta data
names(sampleInfo)[1]="sample_names"
names(sampleInfo)[2]="condit_stage"
sampleInfo
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage) # tidy = F
#let's see what this object looks like
dds
dds <- DESeq(dds)
resultsNames(dds)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage +condit_stage) # tidy = F
dds <- DESeq(dds)
resultsNames(dds)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage +5 ) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage +1 ) # tidy = F
dds
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage +2 ) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage +1 ) # tidy = F
dds <- DESeq(dds)
resultsNames(dds)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  condit_stage +0 ) # tidy = F
dds <- DESeq(dds)
resultsNames(dds)
sampleInfo <- as.data.frame(bind_cols(samplnames,condition,stage)) # meta data
names(sampleInfo)[1]="sample_names"
names(sampleInfo)[2]="sample_source"
names(sampleInfo)[3]="stage"
sampleInfo
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  sample_source + stage +
sample_source:stage ) # tidy = F
dds <- DESeq(dds)
resultsNames(dds)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~ stage:sample_source) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~ +stage:sample_source) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  sample_source + stage +
stage:sample_source) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  sample_source + stage +
stage:sample_source, tidy = T) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  sample_source + stage +
stage:sample_source) # tidy = F
#let's see what this object looks like
dds$stage
#let's see what this object looks like
dds
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  sample_source + stage +
stage:sample_source) # tidy = F
resultsNames(dds)
dds <- DESeq(dds)
resultsNames(dds)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  stage:sample_source + sample_source:stage ) # tidy = F
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= sampleInfo,
design= ~  stage + sample_source +
stage:sample_source ) # tidy = F
dds <- DESeq(dds)
resultsNames(dds)
head(sampleInfo)
st1 <- sampleInfo[,1:2]
st1
st1 <- sampleInfo[1:2,]
st1
st1 <- sampleInfo[c(1:2, 4:5),]
st1
sampleInfo
st1 <- sampleInfo[c(1:2, 11:12),]
st1
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(samples),
colData= st1,
design= ~  sample_source) # tidy = F
st1.1 <- sampleInfo[c(1:2, 11:12),]
st1 <- samples[c(1:2, 11:12),]
st1.1 <- sampleInfo[c(1:2, 11:12),]
st1
st1 <- samples[,c(1:2, 11:12)]
st1
st1.1 <- sampleInfo[c(1:2, 11:12),]
st1.1
st1_samp <- samples[,c(1:2, 11:12)]
st1_Info <- sampleInfo[c(1:2, 11:12),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st1_samp),
colData= st1_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
resultsNames(dds)
results(dds, coef=2, cooksCutoff= T)
results(dds, coef=1, cooksCutoff= T)
results(dds, cooksCutoff= T) #coef=1
summary(res) #summary of results
res <- results(dds, cooksCutoff= T) #coef=1
summary(res) #summary of results
res <- res[order(res$padj),] #Sort summary list by p-value
# changing p-adj
sum(res$padj < 0.05, na.rm=TRUE)
res05 <- results(dds, alpha=0.05)
# changing p-adj
sum(res$padj < 0.05,abs(res$log2FoldChange) > 1, na.rm=TRUE)
# changing p-adj
sum(res$padj < 0.05,abs(res$log2FoldChange) > 0, na.rm=TRUE)
abs(res$log2FoldChange)
# changing p-adj
sum(res$padj < 0.05, abs(res$log2FoldChange) > 1 , na.rm=TRUE)
# changing p-adj
sum(res$padj < 0.05, res$log2FoldChange > 1 , na.rm=TRUE)
# changing p-adj
sum(res$padj < 0.05, res$log2FoldChange > 0 , na.rm=TRUE)
summary(res) #summary of results
# changing p-adj
sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
# changing p-adj and LFC values
sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05)
summary(res05)
write.table(res05, file = "stage1_Deseq2.txt",row.names = T,col.names = T,quote = F)
res05 <- results(dds, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
#
res <- as.data.frame(res)
res05 <- res[res$padj < 0.05 & abs(res$log2FoldChange) > 1,]
res05
res <- results(dds, cooksCutoff= T) #coef=1
res05 <- subset(res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 1)
summary(res05)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 0)
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 0)
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 1)
summary(res05)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds,name, alpha=0.05, lfcThreshold = 1)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds,name= "stage1", alpha=0.05, lfcThreshold = 1)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 1)
summary(res05)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 0)
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05
summary(res) #summary of results
results(dds, alpha=0.05, lfcThreshold = 0)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
res05 <- results(dds, alpha=0.05, lfcThreshold = 1, listValues = c(5, -5))
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
# changing p-adj and LFC values
#sum(res$padj < 0.05 & abs(res$log2FoldChange) > 1 , na.rm=TRUE)
#results(dds, alpha=0.05, lfcThreshold = 1)
summary(res05)
write.table(res05, file = "stage1_Deseq2.txt",row.names = T,col.names = T,quote = F)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res01, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 1", xlim=c(-3,3)))
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res01, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 1", xlim=c(-3,3)))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 1", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
write.table(rownames(res05), file = "stage1_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage1_DEGs[names].txt",row.names = T,col.names = T,quote = F)
res <- results(dds, cooksCutoff= T) #coef=1
summary(res) #summary of results
View(res)
res <- res[order(res$padj),] #Sort summary list by p-value
write.table(res, file = "stage1_Deseq2.txt",row.names = T,col.names = T,quote = F)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
summary(res05)
write.table(res, file = "stage1_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage1_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage1_DEGs[names].txt",row.names = T,col.names = T,quote = F)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 1", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
plot <- with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
st_samp <- samples[,c(3:4, 13:14)]
st_Info <- sampleInfo[c(3:4, 13:14),]
st_samp
st_Info
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st_samp),
colData= st_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
summary(res05)
write.table(res, file = "stage2_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage2_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage2_DEGs[names].txt",row.names = T,col.names = T,quote = F)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 2", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 1)
res05dow <- subset(res, res$padj < 0.05 & res$log2FoldChange < -1)
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 1)
res05down <- subset(res, res$padj < 0.05 & res$log2FoldChange < -1)
write.table(rownames(res05up), file = "stage2_DEGsup[names].txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05down), file = "stage2_DEGsdown[names].txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage2_DEGs[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05up), file = "stage2_DEGsup[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05down), file = "stage2_DEGsdown[names].txt",row.names = F,col.names = F,quote = F)
st_samp <- samples[,c(5:6, 15:16)]
st_Info <- sampleInfo[c(5:6, 15:16),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st_samp),
colData= st_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 1)
res05down <- subset(res, res$padj < 0.05 & res$log2FoldChange < -1)
ummary(res05)
summary(res05)
write.table(res, file = "stage2_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage2_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage2_DEGs[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05up), file = "stage2_DEGsup[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05down), file = "stage2_DEGsdown[names].txt",row.names = F,col.names = F,quote = F)
write.table(res, file = "stage3_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage3_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage3_DEGs[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05up), file = "stage3_DEGsup[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05down), file = "stage3_DEGsdown[names].txt",row.names = F,col.names = F,quote = F)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 3", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
st_samp <- samples[,c(7:8, 17:18)]
st_Info <- sampleInfo[c(7:8, 17:18),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st_samp),
colData= st_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 1)
res05down <- subset(res, res$padj < 0.05 & res$log2FoldChange < -1)
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 2)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 2)
res05down <- subset(res, res$padj < 0.05 & res$log2FoldChange < -2)
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 1)
res05down <- subset(res, res$padj < 0.05 & res$log2FoldChange < -1)
summary(res05)
write.table(res, file = "stage4_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage4_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage4_DEGs[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05up), file = "stage4_DEGsup[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05down), file = "stage4_DEGsdown[names].txt",row.names = F,col.names = F,quote = F)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 3", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 3", xlim=c(-3,3)))
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 3", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 4", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 4", xlim=c(-5,5)))
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 4", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.01 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.01 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
res05 <- subset(res, res$padj < 0.01 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
summary(res05)
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
summary(res05)
res05 <- subset(res, res$padj < 0.01 & abs(res$log2FoldChange) > 2)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
summary(res05)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 4", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
st1_samp <- samples[,c(1:2, 11:12)]
st1_Info <- sampleInfo[c(1:2, 11:12),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st1_samp),
colData= st1_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
summary(res05)
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 1", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
st_samp <- samples[,c(3:4, 13:14)]
st_Info <- sampleInfo[c(3:4, 13:14),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st_samp),
colData= st_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 2", xlim=c(-3,3)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 2", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
st_samp <- samples[,c(5:6, 15:16)]
st_Info <- sampleInfo[c(5:6, 15:16),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st_samp),
colData= st_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 3", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < 1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 3", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
st_samp <- samples[,c(9:10, 19:20)]
st_Info <- sampleInfo[c(9:10, 19:20),]
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData= round(st_samp),
colData= st_Info,
design= ~  sample_source) # tidy = F
dds <- DESeq(dds)
#             *****Results*******
resultsNames(dds)
res <- results(dds, cooksCutoff= T) #coef=1
res <- res[order(res$padj),] #Sort summary list by p-value
summary(res) #summary of results
res05 <- subset(res, res$padj < 0.05 & abs(res$log2FoldChange) > 1)
res05 <- res05[order(res05$padj),] #Sort summary list by p-value
res05up <- subset(res, res$padj < 0.05 & res$log2FoldChange > 1)
res05down <- subset(res, res$padj < 0.05 & res$log2FoldChange < -1)
summary(res05)
write.table(res, file = "stage4_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage4_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage4_DEGs[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05up), file = "stage4_DEGsup[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05down), file = "stage4_DEGsdown[names].txt",row.names = F,col.names = F,quote = F)
write.table(res, file = "stage5_Deseq2.txt",row.names = T,col.names = T,quote = F)
write.table(res05, file = "stage5_DEGs.txt",row.names = T,col.names = T,quote = F)
write.table(rownames(res05), file = "stage5_DEGs[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05up), file = "stage5_DEGsup[names].txt",row.names = F,col.names = F,quote = F)
write.table(rownames(res05down), file = "stage5_DEGsdown[names].txt",row.names = F,col.names = F,quote = F)
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 5", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
#reset par
par(mfrow=c(1,1))
# Make a basic volcano plot
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main="Stage 5", xlim=c(-6,6)))
# Add colored points: blue if padj<0.01, red if log2FC>1 and padj<0.05)
with(subset(res, padj< 0.05 & log2FoldChange > 1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
with(subset(res, padj< 0.05 & log2FoldChange < -1), points(log2FoldChange, -log10(pvalue), pch=20, col="green"))
